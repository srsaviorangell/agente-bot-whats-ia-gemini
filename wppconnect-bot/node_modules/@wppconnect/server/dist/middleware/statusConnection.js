"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = statusConnection;

















var _functions = require("../util/functions"); /*
 * Copyright 2021 WPPConnect Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function statusConnection(req, res, next) {try {const numbers = [];if (req.client && req.client.isConnected) {await req.client.isConnected();const localArr = (0, _functions.contactToArray)(req.body.phone || [], req.body.isGroup,
        req.body.isNewsletter,
        req.body.isLid
      );
      let index = 0;
      for (const contact of localArr) {
        if (req.body.isGroup || req.body.isNewsletter) {
          localArr[index] = contact;
        } else if (numbers.indexOf(contact) < 0) {
          console.log(contact);
          const profile = await req.client.
          checkNumberStatus(contact).
          catch((error) => console.log(error));
          if (!profile?.numberExists) {
            const num = contact.split('@')[0];
            res.status(400).json({
              response: null,
              status: 'Connected',
              message: `O número ${num} não existe.`
            });
          } else {
            if (numbers.indexOf(profile.id._serialized) < 0) {
              numbers.push(profile.id._serialized);
            }
            localArr[index] = profile.id._serialized;
          }
        }
        index++;
      }
      req.body.phone = localArr;
    } else {
      res.status(404).json({
        response: null,
        status: 'Disconnected',
        message: 'A sessão do WhatsApp não está ativa.'
      });
    }
    next();
  } catch (error) {
    req.logger.error(error);
    res.status(404).json({
      response: null,
      status: 'Disconnected',
      message: 'A sessão do WhatsApp não está ativa.'
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZnVuY3Rpb25zIiwicmVxdWlyZSIsInN0YXR1c0Nvbm5lY3Rpb24iLCJyZXEiLCJyZXMiLCJuZXh0IiwibnVtYmVycyIsImNsaWVudCIsImlzQ29ubmVjdGVkIiwibG9jYWxBcnIiLCJjb250YWN0VG9BcnJheSIsImJvZHkiLCJwaG9uZSIsImlzR3JvdXAiLCJpc05ld3NsZXR0ZXIiLCJpc0xpZCIsImluZGV4IiwiY29udGFjdCIsImluZGV4T2YiLCJjb25zb2xlIiwibG9nIiwicHJvZmlsZSIsImNoZWNrTnVtYmVyU3RhdHVzIiwiY2F0Y2giLCJlcnJvciIsIm51bWJlckV4aXN0cyIsIm51bSIsInNwbGl0Iiwic3RhdHVzIiwianNvbiIsInJlc3BvbnNlIiwibWVzc2FnZSIsImlkIiwiX3NlcmlhbGl6ZWQiLCJwdXNoIiwibG9nZ2VyIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL21pZGRsZXdhcmUvc3RhdHVzQ29ubmVjdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMjEgV1BQQ29ubmVjdCBUZWFtXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IE5leHRGdW5jdGlvbiwgUmVxdWVzdCwgUmVzcG9uc2UgfSBmcm9tICdleHByZXNzJztcblxuaW1wb3J0IHsgY29udGFjdFRvQXJyYXkgfSBmcm9tICcuLi91dGlsL2Z1bmN0aW9ucyc7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIHN0YXR1c0Nvbm5lY3Rpb24oXG4gIHJlcTogUmVxdWVzdCxcbiAgcmVzOiBSZXNwb25zZSxcbiAgbmV4dDogTmV4dEZ1bmN0aW9uXG4pIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBudW1iZXJzOiBhbnkgPSBbXTtcbiAgICBpZiAocmVxLmNsaWVudCAmJiByZXEuY2xpZW50LmlzQ29ubmVjdGVkKSB7XG4gICAgICBhd2FpdCByZXEuY2xpZW50LmlzQ29ubmVjdGVkKCk7XG5cbiAgICAgIGNvbnN0IGxvY2FsQXJyID0gY29udGFjdFRvQXJyYXkoXG4gICAgICAgIHJlcS5ib2R5LnBob25lIHx8IFtdLFxuICAgICAgICByZXEuYm9keS5pc0dyb3VwLFxuICAgICAgICByZXEuYm9keS5pc05ld3NsZXR0ZXIsXG4gICAgICAgIHJlcS5ib2R5LmlzTGlkXG4gICAgICApO1xuICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgIGZvciAoY29uc3QgY29udGFjdCBvZiBsb2NhbEFycikge1xuICAgICAgICBpZiAocmVxLmJvZHkuaXNHcm91cCB8fCByZXEuYm9keS5pc05ld3NsZXR0ZXIpIHtcbiAgICAgICAgICBsb2NhbEFycltpbmRleF0gPSBjb250YWN0O1xuICAgICAgICB9IGVsc2UgaWYgKG51bWJlcnMuaW5kZXhPZihjb250YWN0KSA8IDApIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhjb250YWN0KTtcbiAgICAgICAgICBjb25zdCBwcm9maWxlOiBhbnkgPSBhd2FpdCByZXEuY2xpZW50XG4gICAgICAgICAgICAuY2hlY2tOdW1iZXJTdGF0dXMoY29udGFjdClcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IGNvbnNvbGUubG9nKGVycm9yKSk7XG4gICAgICAgICAgaWYgKCFwcm9maWxlPy5udW1iZXJFeGlzdHMpIHtcbiAgICAgICAgICAgIGNvbnN0IG51bSA9IChjb250YWN0IGFzIGFueSkuc3BsaXQoJ0AnKVswXTtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgICAgICAgcmVzcG9uc2U6IG51bGwsXG4gICAgICAgICAgICAgIHN0YXR1czogJ0Nvbm5lY3RlZCcsXG4gICAgICAgICAgICAgIG1lc3NhZ2U6IGBPIG7Dum1lcm8gJHtudW19IG7Do28gZXhpc3RlLmAsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKChudW1iZXJzIGFzIGFueSkuaW5kZXhPZihwcm9maWxlLmlkLl9zZXJpYWxpemVkKSA8IDApIHtcbiAgICAgICAgICAgICAgKG51bWJlcnMgYXMgYW55KS5wdXNoKHByb2ZpbGUuaWQuX3NlcmlhbGl6ZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgKGxvY2FsQXJyIGFzIGFueSlbaW5kZXhdID0gcHJvZmlsZS5pZC5fc2VyaWFsaXplZDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaW5kZXgrKztcbiAgICAgIH1cbiAgICAgIHJlcS5ib2R5LnBob25lID0gbG9jYWxBcnI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlcy5zdGF0dXMoNDA0KS5qc29uKHtcbiAgICAgICAgcmVzcG9uc2U6IG51bGwsXG4gICAgICAgIHN0YXR1czogJ0Rpc2Nvbm5lY3RlZCcsXG4gICAgICAgIG1lc3NhZ2U6ICdBIHNlc3PDo28gZG8gV2hhdHNBcHAgbsOjbyBlc3TDoSBhdGl2YS4nLFxuICAgICAgfSk7XG4gICAgfVxuICAgIG5leHQoKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXEubG9nZ2VyLmVycm9yKGVycm9yKTtcbiAgICByZXMuc3RhdHVzKDQwNCkuanNvbih7XG4gICAgICByZXNwb25zZTogbnVsbCxcbiAgICAgIHN0YXR1czogJ0Rpc2Nvbm5lY3RlZCcsXG4gICAgICBtZXNzYWdlOiAnQSBzZXNzw6NvIGRvIFdoYXRzQXBwIG7Do28gZXN0w6EgYXRpdmEuJyxcbiAgICB9KTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkEsSUFBQUEsVUFBQSxHQUFBQyxPQUFBLHNCQUFtRCxDQWxCbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBTWUsZUFBZUMsZ0JBQWdCQSxDQUM1Q0MsR0FBWSxFQUNaQyxHQUFhLEVBQ2JDLElBQWtCLEVBQ2xCLENBQ0EsSUFBSSxDQUNGLE1BQU1DLE9BQVksR0FBRyxFQUFFLENBQ3ZCLElBQUlILEdBQUcsQ0FBQ0ksTUFBTSxJQUFJSixHQUFHLENBQUNJLE1BQU0sQ0FBQ0MsV0FBVyxFQUFFLENBQ3hDLE1BQU1MLEdBQUcsQ0FBQ0ksTUFBTSxDQUFDQyxXQUFXLENBQUMsQ0FBQyxDQUU5QixNQUFNQyxRQUFRLEdBQUcsSUFBQUMseUJBQWMsRUFDN0JQLEdBQUcsQ0FBQ1EsSUFBSSxDQUFDQyxLQUFLLElBQUksRUFBRSxFQUNwQlQsR0FBRyxDQUFDUSxJQUFJLENBQUNFLE9BQU87UUFDaEJWLEdBQUcsQ0FBQ1EsSUFBSSxDQUFDRyxZQUFZO1FBQ3JCWCxHQUFHLENBQUNRLElBQUksQ0FBQ0k7TUFDWCxDQUFDO01BQ0QsSUFBSUMsS0FBSyxHQUFHLENBQUM7TUFDYixLQUFLLE1BQU1DLE9BQU8sSUFBSVIsUUFBUSxFQUFFO1FBQzlCLElBQUlOLEdBQUcsQ0FBQ1EsSUFBSSxDQUFDRSxPQUFPLElBQUlWLEdBQUcsQ0FBQ1EsSUFBSSxDQUFDRyxZQUFZLEVBQUU7VUFDN0NMLFFBQVEsQ0FBQ08sS0FBSyxDQUFDLEdBQUdDLE9BQU87UUFDM0IsQ0FBQyxNQUFNLElBQUlYLE9BQU8sQ0FBQ1ksT0FBTyxDQUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUU7VUFDdkNFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSCxPQUFPLENBQUM7VUFDcEIsTUFBTUksT0FBWSxHQUFHLE1BQU1sQixHQUFHLENBQUNJLE1BQU07VUFDbENlLGlCQUFpQixDQUFDTCxPQUFPLENBQUM7VUFDMUJNLEtBQUssQ0FBQyxDQUFDQyxLQUFLLEtBQUtMLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSSxLQUFLLENBQUMsQ0FBQztVQUN2QyxJQUFJLENBQUNILE9BQU8sRUFBRUksWUFBWSxFQUFFO1lBQzFCLE1BQU1DLEdBQUcsR0FBSVQsT0FBTyxDQUFTVSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzFDdkIsR0FBRyxDQUFDd0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUM7Y0FDbkJDLFFBQVEsRUFBRSxJQUFJO2NBQ2RGLE1BQU0sRUFBRSxXQUFXO2NBQ25CRyxPQUFPLEVBQUUsWUFBWUwsR0FBRztZQUMxQixDQUFDLENBQUM7VUFDSixDQUFDLE1BQU07WUFDTCxJQUFLcEIsT0FBTyxDQUFTWSxPQUFPLENBQUNHLE9BQU8sQ0FBQ1csRUFBRSxDQUFDQyxXQUFXLENBQUMsR0FBRyxDQUFDLEVBQUU7Y0FDdkQzQixPQUFPLENBQVM0QixJQUFJLENBQUNiLE9BQU8sQ0FBQ1csRUFBRSxDQUFDQyxXQUFXLENBQUM7WUFDL0M7WUFDQ3hCLFFBQVEsQ0FBU08sS0FBSyxDQUFDLEdBQUdLLE9BQU8sQ0FBQ1csRUFBRSxDQUFDQyxXQUFXO1VBQ25EO1FBQ0Y7UUFDQWpCLEtBQUssRUFBRTtNQUNUO01BQ0FiLEdBQUcsQ0FBQ1EsSUFBSSxDQUFDQyxLQUFLLEdBQUdILFFBQVE7SUFDM0IsQ0FBQyxNQUFNO01BQ0xMLEdBQUcsQ0FBQ3dCLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDO1FBQ25CQyxRQUFRLEVBQUUsSUFBSTtRQUNkRixNQUFNLEVBQUUsY0FBYztRQUN0QkcsT0FBTyxFQUFFO01BQ1gsQ0FBQyxDQUFDO0lBQ0o7SUFDQTFCLElBQUksQ0FBQyxDQUFDO0VBQ1IsQ0FBQyxDQUFDLE9BQU9tQixLQUFLLEVBQUU7SUFDZHJCLEdBQUcsQ0FBQ2dDLE1BQU0sQ0FBQ1gsS0FBSyxDQUFDQSxLQUFLLENBQUM7SUFDdkJwQixHQUFHLENBQUN3QixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztNQUNuQkMsUUFBUSxFQUFFLElBQUk7TUFDZEYsTUFBTSxFQUFFLGNBQWM7TUFDdEJHLE9BQU8sRUFBRTtJQUNYLENBQUMsQ0FBQztFQUNKO0FBQ0YiLCJpZ25vcmVMaXN0IjpbXX0=